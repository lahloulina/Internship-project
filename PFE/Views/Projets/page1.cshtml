@model List<ProjetViewModel>


<style>
    .row .container {
        max-width: 100% !important;
        display: inline !important;
        margin-left: -14px !important;
        margin-top: 14px !important;
    }

    #myInput {
        background-position: 10px 15px; /* Position the search icon */
        background-size: 20px 20px;
        background-repeat: no-repeat; /* Do not repeat the icon image */
        width: 30%; /* Full-width */
        font-size: 16px; /* Increase font-size */
        padding: 12px 20px 12px 40px; /* Add some padding */
        border: 1px solid #ddd; /* Add a grey border */
        margin: 12px; /* Add some space below the input */

        align-content: end;
    }


    #myTable {
        /* Add a bottom border to all table rows */
        border-bottom: 1px solid #ddd;
        margin: 12px;
    }

        #myTable tr.header, #myTable tr:hover {
            /* Add a grey background color to the table header and on hover */
            background-color: #f1f1f1;
        }
</style>
<body>
    <h1 class="text-left text-primary">Liste de collaborateurs affectés aux projets</h1>
    <div class="tab-pane active show fade" id="tab-Affectation">
        <br />
    </div>
   


    <br />

    <br />

    <div class="card">

        <div class="container-flex   justify-content-start">
            <nav class="nav nav-tabs ">
                <button type="button" class="nav-link" onclick="redirectToAnotherPage()">Projets</button>
                <button type="button" class="nav-link  active text-primary" data-bs-toggle="tab" data-bs-target="#tab-Affectation">Affectations</button>
            </nav>
        </div>
        <div class="tab-content">
           
            <table id="myTable" class="table table-bordered" style="width:90%">
                <thead>
                    <tr>
                        <th class="text-primary" >Projet</th>
                        <th class="text-primary">Nom du collaborateur</th>
                        <th class="text-primary">Prénom du collaborateur</th>
                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var projet in Model)
                    {
                        <tr>
                            <td>@projet.ProjetName</td>
                            <td>
                                @foreach (var collaboratorName in projet.CollaboratorNames)
                                {
                                    @collaboratorName <br />
                                }
                            </td>
                            <td>
                                @foreach (var collaboratorPrenom in projet.CollaboratorPrenom)
                                {
                                    @collaboratorPrenom <br/>
                                }
                            </td>
         
                        </tr>
                    }
                </tbody>
            </table>

            @*  @foreach (var formation in Model)
            {
            <h3>@formation.FormationName</h3>
            <ul>
            @foreach (var collaboratorName in formation.CollaboratorNames)
            {
            <li>@collaboratorName</li>
            }
            </ul>
            }*@




        </div>
    </div>
    <script>
        function redirectToAnotherPage() {
            var url = '@Url.Action("index", "Projets")';
            window.location.href = url;
        }
        //function myFunction() {
        //       // Declare variables
        //       var input, filter, table, tr, td, i, txtValue;
        //       input = document.getElementById("myInput");
        //       filter = input.value.toUpperCase();
        //       table = document.getElementById("myTable");
        //       tr = table.getElementsByTagName("tr");

        //       // Loop through all table rows, and hide those who don't match the search query
        //       for (i = 0; i < tr.length; i++) {
        //           td = tr[i].getElementsByTagName("td")[0];
        //           if (td) {
        //               txtValue = td.textContent || td.innerText;
        //               if (txtValue.toUpperCase().indexOf(filter) > -1) {
        //                   tr[i].style.display = "";
        //               } else {
        //                   tr[i].style.display = "none";
        //               }
        //           }
        //       }
        //   }
        function myFunction() {
            // Declare variables
            var input, filter, table, tr, td1, td2, i, txtValue1, txtValue2;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("myTable");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td1 = tr[i].getElementsByTagName("td")[0];
                td2 = tr[i].getElementsByTagName("td")[1]; // Get the second column (change index to 1)

                if (td1 && td2) {
                    txtValue1 = td1.textContent || td1.innerText;
                    txtValue2 = td2.textContent || td2.innerText;

                    // Perform search for both columns
                    if (
                        txtValue1.toUpperCase().indexOf(filter) > -1 ||
                        txtValue2.toUpperCase().indexOf(filter) > -1
                    ) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

    </script>
</body>